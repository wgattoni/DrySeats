package android.example.iaproject;

import android.Manifest;
import android.app.IntentService;
import android.app.NotificationChannel;
import android.app.NotificationManager;
import android.content.Context;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.location.Location;
import android.location.LocationManager;
import android.util.Log;
import android.widget.Toast;

import androidx.core.app.ActivityCompat;
import androidx.core.app.NotificationCompat;
import androidx.core.content.ContextCompat;

import com.android.volley.Request;
import com.android.volley.RequestQueue;
import com.android.volley.Response;
import com.android.volley.VolleyError;
import com.android.volley.toolbox.StringRequest;
import com.android.volley.toolbox.Volley;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

public class NotificationService extends IntentService {

    public NotificationService() {
        super("NotificationService");
    }

    public static final String appid = "7cc3118c75dbb0764869474f8abd357e";
    private final String url = "http://api.openweathermap.org/data/2.5/onecall?";
    private String tempURL;
    private int pop;
    private int notificationID = 0;
    int leadingTime = 0;
    int notificationThreshold = 0;

    @Override
    public void onCreate() {
        super.onCreate();
        createNotificationChannel();
    }

    protected void onHandleIntent(Intent intent) {
        leadingTime = Integer.parseInt(intent.getStringExtra("LeadingTime"));
        notificationThreshold = Integer.parseInt(intent.getStringExtra("NotificationThreshold"));

        getLocation();
        getPOP();
        notifications();

        Log.i("POP", String.valueOf(pop));
    }

    private void getLocation() {
        if (ContextCompat.checkSelfPermission(NotificationService.this, Manifest.permission.ACCESS_FINE_LOCATION)
                != PackageManager.PERMISSION_GRANTED) {
        }

        LocationManager locationManager = (LocationManager)getSystemService(Context.LOCATION_SERVICE);
        Location location = locationManager.getLastKnownLocation(LocationManager.GPS_PROVIDER);
        double longitude = location.getLongitude();
        double latitude = location.getLatitude();



        tempURL = url + "lat=" + latitude + "&lon=" + longitude + "&exclude=minutely,daily,alerts,current&units=imperial" + "&appid=" + appid;
    }

    private void getPOP() {
        StringRequest stringRequest = new StringRequest(Request.Method.POST, tempURL, new Response.Listener<String>() {
            @Override
            public void onResponse(String response) {
                Log.d("response", response);
                String output = "";
                try {
                    JSONObject jsonResponse = new JSONObject(response);
                    JSONArray jsonArray = jsonResponse.getJSONArray("hourly");
                    pop = jsonArray.getJSONObject(leadingTime).getInt("pop");
                } catch (JSONException e) {
                    e.printStackTrace();
                }
            }
        }, new Response.ErrorListener() {
            @Override
            public void onErrorResponse(VolleyError error) {
                Toast.makeText(getApplicationContext(), error.toString().trim(), Toast.LENGTH_SHORT).show();
            }
        });
        RequestQueue requestQueue = Volley.newRequestQueue(getApplicationContext());
        requestQueue.add(stringRequest);

    }

    private void notifications() {
        if (pop >= notificationThreshold) {
            NotificationCompat.Builder mBuilder = new NotificationCompat.Builder(this, "12345");
            mBuilder.setSmallIcon(R.drawable.d11);
            mBuilder.setContentTitle("Weather Alert!");
            mBuilder.setContentText("There is a " + pop + "% chance of rain.");

            NotificationManager mNotificationManager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);
            mNotificationManager.notify(notificationID++, mBuilder.build());
        }
    }

    private void createNotificationChannel() {
        if (pop >= notificationThreshold) {
            CharSequence name = "mNotificationChannel";
            String description = "Main notification channel";
            int importance = NotificationManager.IMPORTANCE_HIGH;
            NotificationChannel channel = new NotificationChannel("12345", name, importance);
            channel.setDescription(description);
            NotificationManager notificationManager = getSystemService(NotificationManager.class);
            notificationManager.createNotificationChannel(channel);
        }
    }
}
