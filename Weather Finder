package android.example.iaproject;

import androidx.appcompat.app.AppCompatActivity;
import androidx.core.app.ActivityCompat;
import androidx.core.content.ContextCompat;

import android.Manifest;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.pm.PackageManager;
import android.graphics.drawable.Drawable;
import android.icu.util.TimeZone;
import android.location.Address;
import android.location.Geocoder;
import android.location.Location;
import android.location.LocationListener;
import android.location.LocationManager;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.widget.ArrayAdapter;
import android.widget.EditText;
import android.widget.ListAdapter;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;

import com.android.volley.Request;
import com.android.volley.RequestQueue;
import com.android.volley.Response;
import com.android.volley.VolleyError;
import com.android.volley.toolbox.StringRequest;
import com.android.volley.toolbox.Volley;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.lang.reflect.Array;
import java.util.ArrayList;

import java.time.*;
import java.time.format.*;
import java.util.List;
import java.util.Locale;


public class Weather extends AppCompatActivity{
    android.widget.ListView listView;
    int time = 0;
    String timeString;
    String icon;
    int temperature = 50;

    JSONArray jsonArray;
    WeatherListAdapter adapter;
    String whatToDraw;

    ArrayList<WeatherData> weatherList = new ArrayList<>();

    String tempURL;
    private final String url = "http://api.openweathermap.org/data/2.5/onecall?";
    private final String appid = "7cc3118c75dbb0764869474f8abd357e";

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        getLocation();
        setup(savedInstanceState);
        fillListViewAndDisplay();
    }

    private void setup(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        requestWindowFeature(Window.FEATURE_NO_TITLE);
        getSupportActionBar().hide();
        setContentView(R.layout.activity_weather);
        listView = findViewById(R.id.WeatherListView);
    }


    private void fillListViewAndDisplay() {
        StringRequest stringRequest = new StringRequest(Request.Method.POST, tempURL, new Response.Listener<String>() {
            @Override
            public void onResponse(String response) {
                Log.d("response", response);
                String output = "";
                try {
                    JSONObject jsonResponse = new JSONObject(response);
                    jsonArray = jsonResponse.getJSONArray("hourly");
                    int tzOffset = jsonResponse.getInt("timezone_offset");

                    fillWeatherListView(tzOffset);

                    adapter.notifyDataSetChanged();

                } catch (JSONException e) {
                    e.printStackTrace();
                }
            }
        }, new Response.ErrorListener() {
            @Override
            public void onErrorResponse(VolleyError error) {
                Toast.makeText(getApplicationContext(), error.toString().trim(), Toast.LENGTH_SHORT).show();
            }
        });
        RequestQueue requestQueue = Volley.newRequestQueue(getApplicationContext());
        requestQueue.add(stringRequest);
        adapter = new WeatherListAdapter(this, R.layout.adapter_view_layout, weatherList);
        listView.setAdapter(adapter);
    }

    private void getLocation() {
        if (ContextCompat.checkSelfPermission(Weather.this, Manifest.permission.ACCESS_FINE_LOCATION)
        != PackageManager.PERMISSION_GRANTED) {
            ActivityCompat.requestPermissions(Weather.this, new String[]{
                    Manifest.permission.ACCESS_FINE_LOCATION
            }, 100);
        }

        LocationManager locationManager = (LocationManager)getSystemService(Context.LOCATION_SERVICE);
        Location location = locationManager.getLastKnownLocation(LocationManager.GPS_PROVIDER);
        double longitude = location.getLongitude();
        double latitude = location.getLatitude();



        tempURL = url + "lat=" + latitude + "&lon=" + longitude + "&exclude=minutely,daily,alerts,current&units=imperial" + "&appid=" + appid;
    }


    private void fillWeatherListView(int tzOffset) throws JSONException {
        for (int x = 0; x < 24; x++) {


            icon = jsonArray.getJSONObject(x).getJSONArray("weather").getJSONObject(0).getString("icon");
            icon = reverseIcon(icon);

            String PACKAGE_NAME = getApplicationContext().getPackageName();
            int imgID = getResources().getIdentifier(PACKAGE_NAME + ":drawable/" + icon, null, null);

            whatToDraw = "drawable://" +  imgID;

            WeatherData temporary = new WeatherData(getPassedHours(jsonArray.getJSONObject(x).getLong("dt"), tzOffset),
                    (int)jsonArray.getJSONObject(x).getDouble("temp"),
                    jsonArray.getJSONObject(x).getInt("pop"),
                    whatToDraw);
            weatherList.add(temporary);

        }
    }

    public void toMain(View view){
        Intent intent = new Intent (this, MainActivity.class);
        startActivity(intent);
    }

    public int getPassedHours(Long x, int offset){

        Instant instant = Instant.ofEpochSecond(x);
        ZoneOffset zo = ZoneOffset.of("-06:00");

        OffsetDateTime dt = OffsetDateTime.ofInstant(instant, zo);

        timeString = dt.toString().substring(11,13);
        int temporary = Integer.parseInt(timeString);

        return temporary;
    }

    public String reverseIcon (String x) {
        char[] ch = x.toCharArray();

        char temp1 = ch[0];
        char temp2 = ch[1];
        char temp3 = ch[2];

        ch[0] = temp3;
        ch[1] = temp1;
        ch[2] = temp2;

        return  String.valueOf(ch);
    }



}
